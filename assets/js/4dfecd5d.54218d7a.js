"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[54],{5641:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"frontend/Base UI/Side Bar Utility","title":"Side Bar Utility","description":"Sidebar","source":"@site/docs/frontend/Base UI/Side Bar Utility.md","sourceDirName":"frontend/Base UI","slug":"/frontend/Base UI/Side Bar Utility","permalink":"/hr-documentation/frontend/Base UI/Side Bar Utility","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Navbar","permalink":"/hr-documentation/frontend/Base UI/Navbar"},"next":{"title":"Base","permalink":"/hr-documentation/frontend/Base UI/Base"}}');var t=i(4848),d=i(8453);const c={sidebar_position:3},r=void 0,l={},o=[{value:"Sidebar",id:"sidebar",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Props",id:"props",level:3},{value:"State and Context",id:"state-and-context",level:3},{value:"Constants",id:"constants",level:3},{value:"Effects",id:"effects",level:3},{value:"Functions",id:"functions",level:3},{value:"Rendering",id:"rendering",level:3},{value:"Tab",id:"tab",level:2},{value:"Component Definition",id:"component-definition",level:3},{value:"Props",id:"props-1",level:3},{value:"Styling",id:"styling",level:3},{value:"Conditional Rendering",id:"conditional-rendering",level:3},{value:"IconTab",id:"icontab",level:2},{value:"Props",id:"props-2",level:3},{value:"Component Logic",id:"component-logic",level:3},{value:"Conditional Rendering:",id:"conditional-rendering-1",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"sidebar",children:"Sidebar"}),"\n",(0,t.jsxs)(n.p,{children:["This component is designed to be reusable and integrates with the application's routing system to highlight the active tab based on the current URL. It also interacts with the ",(0,t.jsx)(n.code,{children:"AuthContext"})," to conditionally render tabs based on user permissions."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\Base UI\\sidebar-utils\\Sidebar.js"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AuthContext:"})," Provides authentication and user details."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tab and IconTab Components:"})," Child components used to render individual tabs."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isSidebarOpen"}),": Boolean indicating whether the sidebar is open."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"setSidebarOpen"}),": Function to toggle the sidebar's open state."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mobileSidebarOpen"}),": Boolean indicating whether the mobile sidebar is open."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"setMobileSidebarOpen"}),": Function to toggle the mobile sidebar's open state."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"state-and-context",children:"State and Context"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"State:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"activeTab"}),": Tracks the currently active tab."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"jobCount"}),": Stores the count of jobs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"applicantsCount"}),": Stores the count of applicants."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Context:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthContext"}),": Provides ",(0,t.jsx)(n.code,{children:"authTokens"})," and ",(0,t.jsx)(n.code,{children:"userDetails"})," for authentication and user-specific data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"constants",children:"Constants"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tabs:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tabs"}),": An array of objects representing the main navigation tabs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"servicesTabs"}),": An array of objects representing the services tabs."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"effects",children:"Effects"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Active Tab Detection:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"useLocation"})," from ",(0,t.jsx)(n.code,{children:"react-router-dom"})," to detect the current URL and set the active tab accordingly."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"useEffect(() => {\n    const paths = location.pathname.split('/')\n    setActiveTab(paths[paths.length - 1] !== \"\" ? (paths[paths.length - 1]).toLowerCase() : (paths[paths.length - 2].toLowerCase()))\n}, [location])\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Fetch Count Data:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fetches job and applicant counts on component mount."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"useEffect(() => {\n    getCount()\n}, [])\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Mobile Sidebar Click Outside:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adds an event listener to close the mobile sidebar when clicking outside of it."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"useEffect(() => {\n    const handleClickOutside = (event) => {\n        if (sidebarRef.current && !sidebarRef.current.contains(event.target)) {\n            setMobileSidebarOpen(false)\n        }\n    };\n\n    if (mobileSidebarOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n    } else {\n        document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n    };\n}, [setMobileSidebarOpen]);\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"getCount:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fetches job and applicant counts from the server."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const getCount = async () => {\n    try {\n        const response = await fetch(`/get_count/all/`, {\n            method: \'GET\',\n            headers: {\n                "Content-Type": "application/json",\n                Authorization: "Bearer " + String(authTokens.access),\n            }\n        })\n\n        if (!response.ok) {\n            throw new Error(\'Network response was not ok\');\n        } else {\n            const data = await response.json()\n            if (data) {\n                setJobCount(data.jobs)\n                setApplicantsCount(data.applicants)\n            }\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"handleToggleSidebar:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Toggles the sidebar's open state."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const handleToggleSidebar = () => {\n    setSidebarOpen(!isSidebarOpen);\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"handleTabClick:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Sets the active tab when a tab is clicked."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const handleTabClick = (tab) => {\n    setActiveTab(tab);\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rendering",children:"Rendering"}),"\n",(0,t.jsxs)(n.p,{children:["The component renders an aside element that contains the sidebar content. It conditionally renders either ",(0,t.jsx)(n.code,{children:"Tab"})," or ",(0,t.jsx)(n.code,{children:"IconTab"})," components based on whether the sidebar is open or closed."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tab",children:"Tab"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Tab"}),' component is a reusable UI element designed for use in a React application, specifically within a sidebar or navigation menu. It provides a clickable tab that can display an icon, a title, and optional counters for specific tabs like "Jobs" or "Applicants". The component is optimized for performance using ',(0,t.jsx)(n.code,{children:"memo"})," to prevent unnecessary re-renders."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path"}),": ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\Base UI\\sidebar-utils\\Tab.js"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"component-definition",children:"Component Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const Tab = memo(({ link, title, iconClass, isActive, isLocked, show, lockIcon, onClick, applicantsCount, jobCount }) => {\n  // Component logic and JSX\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"props-1",children:"Props"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Tab"})," component accepts the following props:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"link"}),": The URL to navigate to when the tab is clicked."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"title"}),": The text displayed on the tab."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"iconClass"}),": CSS class for the icon displayed next to the title."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isActive"}),": Boolean indicating if the tab is currently active."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isLocked"}),": Boolean indicating if the tab is locked (disabled)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"show"}),": Boolean to conditionally render the tab."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"lockIcon"}),": CSS class for the lock icon displayed when the tab is locked."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"onClick"}),": Function to be called when the tab is clicked."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"applicantsCount"}),': Optional count displayed next to the "Applicants" tab.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"jobCount"}),': Optional count displayed next to the "Jobs" tab.']}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"styling",children:"Styling"}),"\n",(0,t.jsx)(n.p,{children:"The component uses dynamic class names based on the props to apply different styles:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Active Tab"}),": ",(0,t.jsx)(n.code,{children:"bg-blue-50 brand-text shadow-md"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Locked Tab"}),": ",(0,t.jsx)(n.code,{children:"text-gray-400"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hover Effect"}),": ",(0,t.jsx)(n.code,{children:"tab-hover"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const tabClasses = `${title}  flex justify-between items-center tab cursor-pointer block py-2 px-4 mb-1 rounded-md font-medium text-sm ${isLocked ? `text-gray-400` : `text-gray-700 tab-hover`}  ${isActive && !isLocked ? 'bg-blue-50 brand-text shadow-md' : ``}`;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"conditional-rendering",children:"Conditional Rendering"}),"\n",(0,t.jsxs)(n.p,{children:["The component conditionally renders the tab based on the ",(0,t.jsx)(n.code,{children:"show"}),' prop. Additionally, it conditionally displays counters for "Jobs" and "Applicants" tabs and a lock icon if the tab is locked.']}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"icontab",children:"IconTab"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"IconTab"})," component is a reusable React component designed to render a tab with an icon in a sidebar or navigation menu. It is part of the ",(0,t.jsx)(n.code,{children:"sidebar-utils"})," module within the ",(0,t.jsx)(n.code,{children:"Base UI"})," directory of the ",(0,t.jsx)(n.code,{children:"hr-frontend"})," project. This component is used to create interactive tabs that can navigate to different routes within the application, with support for active states, locked states, and conditional rendering."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\Base UI\\sidebar-utils\\IconTab.js"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"IconTab"})," component is a functional component that accepts several props to customize its appearance and behavior. The component returns a ",(0,t.jsx)(n.code,{children:"Link"})," element from ",(0,t.jsx)(n.code,{children:"react-router-dom"})," that wraps an icon, allowing the tab to navigate to a specified route when clicked."]}),"\n",(0,t.jsx)(n.h3,{id:"props-2",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"link"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The URL to navigate to when the tab is clicked."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"title"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The title of the tab (not currently used in the rendered output)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"iconClass"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The CSS class for the icon to be displayed in the tab."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isActive"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Determines whether the tab is in an active state."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isLocked"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Determines whether the tab is locked (disabled)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onClick"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"function"})}),(0,t.jsx)(n.td,{children:"A callback function to be executed when the tab is clicked."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"show"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Determines whether the tab should be displayed or hidden."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"component-logic",children:"Component Logic"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Class Names:"})," The component dynamically generates class names based on the ",(0,t.jsx)(n.code,{children:"isActive"})," and ",(0,t.jsx)(n.code,{children:"isLocked"})," props. If the tab is locked, it will have a gray text color (",(0,t.jsx)(n.code,{children:"text-gray-400"}),"). If the tab is active and not locked, it will have a blue background (",(0,t.jsx)(n.code,{children:"bg-blue-50"}),") and a custom class (",(0,t.jsx)(n.code,{children:"brand-text"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"conditional-rendering-1",children:"Conditional Rendering:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The component only renders the ",(0,t.jsx)(n.code,{children:"Link"})," element if the ",(0,t.jsx)(n.code,{children:"show"})," prop is ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The first ",(0,t.jsx)(n.code,{children:"IconTab"}),' renders a tab for the "Dashboard" route. It is active, not locked, and will log a message to the console when clicked.']}),"\n",(0,t.jsxs)(n.li,{children:["The second ",(0,t.jsx)(n.code,{children:"IconTab"}),' renders a tab for the "Settings" route. It is inactive, locked, and will not navigate when clicked due to the ',(0,t.jsx)(n.code,{children:"isLocked"})," prop."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var s=i(6540);const t={},d=s.createContext(t);function c(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);