"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6209],{7541:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"backend/resume parser/models","title":"Models","description":"ResumeScreeningPreference","source":"@site/docs/backend/resume parser/models.md","sourceDirName":"backend/resume parser","slug":"/backend/resume parser/models","permalink":"/hr-documentation/backend/resume parser/models","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Endpoints","permalink":"/hr-documentation/backend/resume parser/endpoints"},"next":{"title":"Tasks","permalink":"/hr-documentation/backend/resume parser/tasks"}}');var l=n(4848),o=n(8453);const r={sidebar_position:2},d="Models",c={},t=[{value:"ResumeScreeningPreference",id:"resumescreeningpreference",level:2},{value:"Fields:",id:"fields",level:3},{value:"ResumeScore",id:"resumescore",level:2},{value:"Fields:",id:"fields-1",level:3},{value:"Resume",id:"resume",level:2},{value:"Fields:",id:"fields-2",level:3},{value:"Methods:",id:"methods",level:3},{value:"OpenAICost",id:"openaicost",level:2},{value:"Fields:",id:"fields-3",level:3}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"models",children:"Models"})}),"\n",(0,l.jsx)(i.h2,{id:"resumescreeningpreference",children:"ResumeScreeningPreference"}),"\n",(0,l.jsx)(i.p,{children:"Stores preferences for resume screening and application forms."}),"\n",(0,l.jsx)(i.h3,{id:"fields",children:"Fields:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"job"})," (ForeignKey): The job associated with the preferences."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"currency"})," (CharField): Currency for salary fields (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"max_retries"})," (PositiveIntegerField): Maximum number of retries allowed (default: 1)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"max_applicants"})," (PositiveIntegerField): Maximum number of applicants allowed (default: 100)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"max_resume_size"})," (PositiveIntegerField): Maximum allowed resume size in MB (default: 10)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"currency"})," (JSONField): Currency details (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"location_to_exclude"})," (JSONField): Locations to exclude from screening (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_github"})," (CharField): Preference for including GitHub link (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_linkedin"})," (CharField): Preference for including LinkedIn link (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_personal_website"})," (CharField): Preference for including personal website (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_profile_pic"})," (CharField): Preference for including profile picture (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_intro_video"})," (CharField): Preference for including introduction video (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_notice_period"})," (CharField): Preference for including notice period (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_current_ctc"})," (CharField): Preference for including current CTC (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_expected_ctc"})," (CharField): Preference for including expected CTC (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_relevant_experience"})," (CharField): Preference for including relevant experience (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"last_increment"})," (CharField): Preference for including last increment details (choices: mandatory, optional, off; default: off)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"include_questions"})," (BooleanField): Include custom questions in the application form (default: False)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"service"})," (ForeignKey): Associated service (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"question_set"})," (ForeignKey): Associated question set (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"questions"})," (ManyToManyField): Custom questions for the application form (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"random_questions"})," (BooleanField): Enable random questions (default: False)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"random_questions_count"})," (PositiveIntegerField): Number of random questions to include (default: 0)."]}),"\n"]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h2,{id:"resumescore",children:"ResumeScore"}),"\n",(0,l.jsx)(i.p,{children:"Stores scores for resume evaluation."}),"\n",(0,l.jsx)(i.h3,{id:"fields-1",children:"Fields:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"job"})," (ForeignKey): The job associated with the resume score (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"user"})," (ForeignKey): The user who evaluated the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"score_weight"})," (ForeignKey): Weightage used for scoring (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"ai_score"})," (BooleanField): Indicates if the score is generated by AI (default: False)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"skills_score"})," (DecimalField): Score for skills section (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"work_exp_score"})," (DecimalField): Score for work experience section (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"projects_score"})," (DecimalField): Score for projects section (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"education_score"})," (DecimalField): Score for education section (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"certifications_score"})," (DecimalField): Score for certifications section (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"overall_score"})," (DecimalField): Overall resume score (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"feedback"})," (CharField): Feedback on the resume (optional)."]}),"\n"]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h2,{id:"resume",children:"Resume"}),"\n",(0,l.jsx)(i.p,{children:"Stores resume details and associated metadata."}),"\n",(0,l.jsx)(i.h3,{id:"fields-2",children:"Fields:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"job"})," (ForeignKey): The job associated with the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"resume_score"})," (ForeignKey): The resume score (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"score_weight"})," (ForeignKey): Weightage used for scoring (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"preference"})," (ForeignKey): Resume screening preferences (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"name"})," (CharField): Name of the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"resume_json"})," (JSONField): Resume data in JSON format (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"input_tokens"})," (IntegerField): Number of input tokens used for processing (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"output_tokens"})," (IntegerField): Number of output tokens generated (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"total_tokens"})," (IntegerField): Total tokens used (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"cost"})," (DecimalField): Cost of processing the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"phone_numbers"})," (CharField): Phone numbers extracted from the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"personal_website"})," (CharField): Personal website URL (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"websites"})," (JSONField): List of websites extracted from the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"emails"})," (CharField): Email addresses extracted from the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"date_of_birth"})," (CharField): Date of birth extracted from the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"addresses"})," (JSONField): Addresses extracted from the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"summary"})," (TextField): Summary of the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"ai_summary"})," (TextField): AI-generated summary of the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"education"})," (JSONField): Education details (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"work_experience"})," (JSONField): Work experience details (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"duration_per_work"})," (JSONField): Duration of each work experience (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"total_duration"})," (IntegerField): Total work experience duration (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"skills"})," (JSONField): Skills listed in the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"skills_matched"})," (JSONField): Skills matched with job requirements (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"skill_match_count"})," (IntegerField): Number of matched skills (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"certifications"})," (JSONField): Certifications listed in the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"projects"})," (JSONField): Projects listed in the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"overall_score"})," (DecimalField): Overall score of the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"resume_file"})," (FileField): Uploaded resume file (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"introduction_video"})," (FileField): Uploaded introduction video (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"upload_count"})," (IntegerField): Number of times the resume was uploaded (default: 0)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"task_duration_seconds"})," (IntegerField): Time taken to process the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"completed"})," (BooleanField): Indicates if resume processing is completed (default: False)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"task_message"})," (CharField): Status message for resume processing (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"retries"})," (PositiveIntegerField): Number of retries for processing (default: 0)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"created_at"})," (DateTimeField): Timestamp when the resume was created (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"updated_at"})," (DateTimeField): Timestamp when the resume was last updated (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"relevant_experience_in_months"})," (IntegerField): Relevant experience in months (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"expected_ctc"})," (IntegerField): Expected CTC (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"status_text"}),' (CharField): Status of the resume (default: "Under Review").']}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"approved_at"})," (DateTimeField): Timestamp when the resume was approved (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"is_approved"})," (BooleanField): Indicates if the resume is approved (default: False)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"approved_by"})," (ForeignKey): User who approved the resume (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"updated_by"})," (ForeignKey): User who last updated the resume status (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"users_shared_with"})," (ManyToManyField): Users with whom the resume is shared (optional)."]}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"methods",children:"Methods:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"__str__"}),": Returns the resume ID as a string."]}),"\n"]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h2,{id:"openaicost",children:"OpenAICost"}),"\n",(0,l.jsx)(i.p,{children:"Stores costs associated with OpenAI API usage."}),"\n",(0,l.jsx)(i.h3,{id:"fields-3",children:"Fields:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"task_name"})," (CharField): Name of the task (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"task_type"})," (CharField): Type of the task (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"resume"})," (ForeignKey): The resume associated with the cost (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"job"})," (ForeignKey): The job associated with the cost (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"object_name"})," (CharField): Name of the object being processed (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"prompt_tokens"})," (IntegerField): Number of prompt tokens used (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"completion_tokens"})," (IntegerField): Number of completion tokens used (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"total_tokens"})," (IntegerField): Total tokens used (optional)."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"cost"})," (DecimalField): Cost of the task (optional)."]}),"\n"]}),"\n",(0,l.jsx)(i.hr,{})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>d});var s=n(6540);const l={},o=s.createContext(l);function r(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);