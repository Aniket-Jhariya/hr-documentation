"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1312],{5597:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"frontend/Components/Applicants/Transcript Timeline","title":"Transcript Timeline","description":"The TranscriptTimeline component is designed to display a synchronized transcript of an audio file. It fetches transcript data from an API, parses it, and highlights words in the transcript as the audio plays.","source":"@site/docs/frontend/Components/Applicants/Transcript Timeline.md","sourceDirName":"frontend/Components/Applicants","slug":"/frontend/Components/Applicants/Transcript Timeline","permalink":"/hr-documentation/frontend/Components/Applicants/Transcript Timeline","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Tab","permalink":"/hr-documentation/frontend/Components/Applicants/Tab"},"next":{"title":"Candidate","permalink":"/hr-documentation/category/candidate"}}');var s=t(4848),i=t(8453);const d={sidebar_position:13},o=void 0,c={},l=[{value:"State Variables",id:"state-variables",level:3},{value:"Functions and Methods",id:"functions-and-methods",level:3}];function a(e){const n={code:"code",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TranscriptTimeline"})," component is designed to display a synchronized transcript of an audio file. It fetches transcript data from an API, parses it, and highlights words in the transcript as the audio plays."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"File Path"}),": ",(0,s.jsx)(n.code,{children:"\\hr-frontend\\src\\components\\applicants\\TranscriptTimeline.js"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"state-variables",children:"State Variables"}),"\n",(0,s.jsxs)(n.p,{children:["|",(0,s.jsx)(n.code,{children:"transcriptData"})," |Stores the parsed transcript data fetched from the API.|\r\n|",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"WordObject"})})," ||\r\n|",(0,s.jsx)(n.code,{children:"start"})," | Start time of the word in the audio.|\r\n|",(0,s.jsx)(n.code,{children:"end"})," | End time of the word in the audio.|\r\n|",(0,s.jsx)(n.code,{children:"punctuated_word"})," | The word with punctuation.|\r\n|",(0,s.jsx)(n.code,{children:"currentTime"})," | Tracks the current playback time of the audio.|\r\n|",(0,s.jsx)(n.code,{children:"topics"})," | Intended to store extracted topics from the transcript (currently unused in the rendered UI).|"]}),"\n",(0,s.jsx)(n.h3,{id:"functions-and-methods",children:"Functions and Methods"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"fetchTranscript"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Fetches transcript data from the API and updates the ",(0,s.jsx)(n.code,{children:"transcriptData"})," state."]}),"\n",(0,s.jsxs)(n.li,{children:["Updates ",(0,s.jsx)(n.code,{children:"transcriptData"})," with parsed transcript words."]}),"\n",(0,s.jsx)(n.li,{children:"Logs parsed data and extracted topics to the console."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),": Logs errors to the console if the fetch request fails."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updateCurrentTime"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Updates the ",(0,s.jsx)(n.code,{children:"currentTime"})," state with the current playback time of the audio."]}),"\n",(0,s.jsxs)(n.li,{children:["Adds and removes an event listener for the ",(0,s.jsx)(n.code,{children:"timeupdate"})," event on the audio element."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"highlightWord"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Determines if a word should be highlighted based on the current playback time."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"start"})," (",(0,s.jsx)(n.code,{children:"number"}),"): Start time of the word."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"end"})," (",(0,s.jsx)(n.code,{children:"number"}),"): End time of the word."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Return Value"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"boolean"}),": ",(0,s.jsx)(n.code,{children:"true"})," if the word should be highlighted, otherwise ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function d(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);