"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1565],{4450:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"frontend/Components/Applicants/Personality Screening","title":"Personality Screening","description":"The ApplicantPersonalityScreening component is a React-based UI component designed to manage and display the personality screening results of job applicants. It integrates with a backend API to fetch, update, and display data related to automated video interviews and personality assessments. This component is part of a larger HR management system, specifically within the applicant tracking module.","source":"@site/docs/frontend/Components/Applicants/Personality Screening.md","sourceDirName":"frontend/Components/Applicants","slug":"/frontend/Components/Applicants/Personality Screening","permalink":"/hr-documentation/frontend/Components/Applicants/Personality Screening","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Personal Info","permalink":"/hr-documentation/frontend/Components/Applicants/Personal Info"},"next":{"title":"Profile","permalink":"/hr-documentation/frontend/Components/Applicants/Profile"}}');var a=t(4848),i=t(8453);const r={sidebar_position:8},c=void 0,l={},o=[{value:"State Management",id:"state-management",level:3},{value:"API Integration",id:"api-integration",level:3},{value:"Dynamic UI Rendering",id:"dynamic-ui-rendering",level:3},{value:"Status Management",id:"status-management",level:3},{value:"Comments Integration",id:"comments-integration",level:3},{value:"Effect Hooks",id:"effect-hooks",level:3},{value:"UI Rendering",id:"ui-rendering",level:3}];function d(e){const n={code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"ApplicantPersonalityScreening"})," component is a React-based UI component designed to manage and display the personality screening results of job applicants. It integrates with a backend API to fetch, update, and display data related to automated video interviews and personality assessments. This component is part of a larger HR management system, specifically within the applicant tracking module."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"File Path"}),": ",(0,a.jsx)(n.code,{children:"\\hr-frontend\\src\\components\\applicants\\ApplicantPersonalityScreening.js"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Heroicons (",(0,a.jsx)(n.code,{children:"ClockIcon"}),", ",(0,a.jsx)(n.code,{children:"PlusIcon"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:["React Select (",(0,a.jsx)(n.code,{children:"Select"}),", ",(0,a.jsx)(n.code,{children:"components"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"state-management",children:"State Management"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Variable Name"}),(0,a.jsx)(n.th,{children:"Purpose"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Applicant Data"})}),(0,a.jsx)(n.td,{children:"Such as screening details, answers, and selected status."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"UI State"})}),(0,a.jsx)(n.td,{children:"Such as loading states, selected categories, and audio playback status."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Graph Data"})}),(0,a.jsx)(n.td,{children:"For rendering radar charts that visualize the applicant's performance."})]})]})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const [selectedStatus, setSelectedStatus] = useState(null);\r\nconst [answers, setAnswers] = useState([]);\r\nconst [screeningDetails, setScreeningDetails] = useState([]);\r\nconst [graphData, setGraphData] = useState([]);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"api-integration",children:"API Integration"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Fetch all personality screenings for a specific applicant and job."}),"\n",(0,a.jsx)(n.li,{children:"Fetch detailed answers for a selected screening."}),"\n",(0,a.jsx)(n.li,{children:"Update the status of the screening (e.g., Shortlisted, Rejected)."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"async function fetchAllScreenings() {\r\n  // API call to fetch all screenings\r\n}\r\n\r\nasync function fetchScreeningsAnswers() {\r\n  // API call to fetch answers for a specific screening\r\n}\r\n\r\nasync function updateStatus(status_text) {\r\n  // API call to update the status of the screening\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"dynamic-ui-rendering",children:"Dynamic UI Rendering"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A dropdown to select different screenings."}),"\n",(0,a.jsx)(n.li,{children:"A radar chart to visualize the applicant's performance across various categories."}),"\n",(0,a.jsx)(n.li,{children:"Video responses, transcripts, and AI-generated insights for each question."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'<BasicRadarChart data={graphData} indicator={graphIndicator} legendData={["Video Interview Summary"]} />\n'})}),"\n",(0,a.jsx)(n.h3,{id:"status-management",children:"Status Management"}),"\n",(0,a.jsx)(n.p,{children:"The component allows HR personnel to update the applicant's status (e.g., Shortlisted, Rejected) and reflects this change in the UI."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"<Select\r\n  isDisabled={updatingStatus || !selectedPersonalityScreening?.completed}\r\n  value={selectedStatus}\r\n  onChange={(selectedOption) => {\r\n    setSelectedStatus(selectedOption);\r\n    updateStatus(selectedOption?.value);\r\n  }}\r\n  options={statuses}\r\n/>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"comments-integration",children:"Comments Integration"}),"\n",(0,a.jsxs)(n.p,{children:["The component integrates a ",(0,a.jsx)(n.code,{children:"CommentsDrawer"})," to allow HR personnel to add comments related to the screening."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'<CommentsDrawer applicantId={applicantId} jobId={jobId} content_type={"Automated Video Interview"} object_id={selectedPersonalityScreening?.id} />\n'})}),"\n",(0,a.jsx)(n.h3,{id:"effect-hooks",children:"Effect Hooks"}),"\n",(0,a.jsxs)(n.p,{children:["The component uses ",(0,a.jsx)(n.code,{children:"useEffect"})," hooks to fetch data when the component mounts or when specific dependencies change."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"useEffect(() => {\r\n  if (applicantId && jobId) {\r\n    fetchAllScreenings();\r\n  }\r\n}, [applicantId, jobId]);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ui-rendering",children:"UI Rendering"}),"\n",(0,a.jsx)(n.p,{children:"The component renders a detailed UI with sections for:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Selecting a screening."}),"\n",(0,a.jsx)(n.li,{children:"Displaying the applicant's status."}),"\n",(0,a.jsx)(n.li,{children:"Showing a radar chart for performance analysis."}),"\n",(0,a.jsx)(n.li,{children:"Reviewing video responses and transcripts."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);