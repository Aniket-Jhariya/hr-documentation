"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3209],{7713:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>r,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"frontend/Utilities/Comments","title":"Comments","description":"Add Comment","source":"@site/docs/frontend/Utilities/Comments.md","sourceDirName":"frontend/Utilities","slug":"/frontend/Utilities/Comments","permalink":"/hr-documentation/frontend/Utilities/Comments","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Checkbox","permalink":"/hr-documentation/frontend/Utilities/Checkbox"},"next":{"title":"Drawer","permalink":"/hr-documentation/frontend/Utilities/Drawer"}}');var t=s(4848),i=s(8453);const r={sidebar_position:5},c=void 0,l={},o=[{value:"Add Comment",id:"add-comment",level:2},{value:"Props",id:"props",level:3},{value:"Functions and Methods",id:"functions-and-methods",level:3},{value:"Add Comment Form",id:"add-comment-form",level:2},{value:"State Variables",id:"state-variables",level:3},{value:"Props",id:"props-1",level:3},{value:"Functions and Methods",id:"functions-and-methods-1",level:3},{value:"Comment Card",id:"comment-card",level:2},{value:"Props",id:"props-2",level:3},{value:"State Variables",id:"state-variables-1",level:3},{value:"Functions and Methods",id:"functions-and-methods-2",level:3},{value:"Comments Drawer",id:"comments-drawer",level:2},{value:"Props",id:"props-3",level:3},{value:"State Variables",id:"state-variables-2",level:3},{value:"Functions and Methods",id:"functions-and-methods-3",level:3}];function h(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"add-comment",children:"Add Comment"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"AddComment.js"})," file provides a user interface for adding comments. It integrates with the ",(0,t.jsx)(n.code,{children:"@headlessui/react"})," library to create a popover interface, which contains a form (",(0,t.jsx)(n.code,{children:"AddCommentForm"}),") for submitting comments."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\comments\\AddComment.js"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"@headlessui/react"}),":",(0,t.jsx)(n.code,{children:"Popover"}),", ",(0,t.jsx)(n.code,{children:"PopoverButton"}),", ",(0,t.jsx)(n.code,{children:"PopoverPanel"}),": Used to create a popover interface."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"@heroicons/react/20/solid"}),": ",(0,t.jsx)(n.code,{children:"PlusIcon"}),": Used as the icon for the popover button."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AddCommentForm"}),": A child component responsible for rendering the comment submission form and handling the submission logic."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Purpose"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"setComments"})}),(0,t.jsx)(n.td,{children:"Function"}),(0,t.jsx)(n.td,{children:"Callback function to update the list of comments in the parent component."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"jobId"})}),(0,t.jsx)(n.td,{children:"String/Number"}),(0,t.jsx)(n.td,{children:"Identifier for the job associated with the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"candidate"})}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"Candidate details to associate with the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user"})}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"User details of the person adding the comment."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"functions-and-methods",children:"Functions and Methods"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AddComment"})," Component"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"useRef"})," to create a reference (",(0,t.jsx)(n.code,{children:"buttonRef"}),") for the ",(0,t.jsx)(n.code,{children:"PopoverButton"})," to manage focus or other interactions."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"AddComment"})," component is a functional React component that renders a popover button and a form for adding comments."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Return Value"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Returns a JSX structure that includes:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"Popover"})," component from ",(0,t.jsx)(n.code,{children:"@headlessui/react"})," with a button (",(0,t.jsx)(n.code,{children:"PopoverButton"}),") and a panel (",(0,t.jsx)(n.code,{children:"PopoverPanel"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"PopoverPanel"})," contains the ",(0,t.jsx)(n.code,{children:"AddCommentForm"})," component, which handles the actual comment submission."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"add-comment-form",children:"Add Comment Form"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"AddCommentForm.js"})," file is responsible for rendering a form that allows users to add comments related to a candidate's interview process. It integrates with the application's backend to submit comments and updates the UI to reflect the new comment."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\comments\\AddCommentForm.js"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@headlessui/react"}),": Used for the popover UI component."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"react-select"}),": Provides a customizable dropdown for selecting interview steps."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@heroicons/react"}),": Supplies icons for UI elements."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"state-variables",children:"State Variables"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable Name"}),(0,t.jsx)(n.th,{children:"Purpose"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"selectedStep"})}),(0,t.jsx)(n.td,{children:"Tracks the selected interview step from the dropdown."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"comment"})}),(0,t.jsx)(n.td,{children:"Stores the comment text entered by the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"loading"})}),(0,t.jsx)(n.td,{children:"Indicates whether the form is in a loading state (e.g., during API calls)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"error"})}),(0,t.jsx)(n.td,{children:"Stores any errors that occur during form submission."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"steps"})}),(0,t.jsx)(n.td,{children:"Contains predefined interview steps for the dropdown."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"props-1",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop Name"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"AuthContext"})}),(0,t.jsx)(n.td,{children:"Provides authentication tokens, user details, and team member avatars."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"AvatarContext"})}),(0,t.jsx)(n.td,{children:"Manages avatar data and provides a function to fetch avatars."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"setComments"})}),(0,t.jsx)(n.td,{children:"Updates the parent component's comments state."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"jobId"})}),(0,t.jsx)(n.td,{children:"Identifies the job associated with the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"candidate"})}),(0,t.jsxs)(n.td,{children:["Contains candidate details (e.g., ",(0,t.jsx)(n.code,{children:"id"}),", ",(0,t.jsx)(n.code,{children:"name"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user"})}),(0,t.jsxs)(n.td,{children:["Contains user details (e.g., ",(0,t.jsx)(n.code,{children:"id"}),")."]})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"functions-and-methods-1",children:"Functions and Methods"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"addComment"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Submits the comment to the backend and updates the UI with the new comment."}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"loading"})," state during the API call."]}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"comments"})," state via the ",(0,t.jsx)(n.code,{children:"setComments"})," prop."]}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"teamMembersAvatars"})," state via ",(0,t.jsx)(n.code,{children:"setTeamMembersAvatars"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Closes the form popover after submission."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Catches errors during the API call and sets the ",(0,t.jsx)(n.code,{children:"error"})," state."]}),"\n",(0,t.jsx)(n.li,{children:"Logs errors to the console."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleClose"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Resets the form state and closes the popover."}),"\n",(0,t.jsxs)(n.li,{children:["Resets ",(0,t.jsx)(n.code,{children:"selectedStep"}),", ",(0,t.jsx)(n.code,{children:"comment"}),", and ",(0,t.jsx)(n.code,{children:"error"})," states."]}),"\n",(0,t.jsxs)(n.li,{children:["Calls the ",(0,t.jsx)(n.code,{children:"close"})," function from ",(0,t.jsx)(n.code,{children:"useClose"})," to close the popover."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"comment-card",children:"Comment Card"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"CommentCard.js"})," file is responsible for rendering and managing individual comments within a comment section. It provides functionality for viewing, editing, and deleting comments."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\comments\\CommentCard.js"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"props-2",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop Name"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"comment"})})}),(0,t.jsx)(n.td,{children:"Represents the comment data. It contains the following fields:"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"id"})}),(0,t.jsx)(n.td,{children:"Unique identifier for the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"text"})}),(0,t.jsx)(n.td,{children:"The content of the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user"})}),(0,t.jsx)(n.td,{children:"Details of the user who posted the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"id"})})}),(0,t.jsx)(n.td,{children:"Unique identifier for the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"name"})})}),(0,t.jsx)(n.td,{children:"Name of the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"email"})})}),(0,t.jsx)(n.td,{children:"Email of the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"profile_pic"})}),(0,t.jsx)(n.td,{children:"URL to the user's profile picture."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"created_at"})}),(0,t.jsx)(n.td,{children:"Timestamp of when the comment was created."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"replies"})}),(0,t.jsx)(n.td,{children:"List of replies to the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"onEdit"})})}),(0,t.jsx)(n.td,{children:"Callback function triggered when a comment is edited. It accepts:"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"commentId"})}),(0,t.jsx)(n.td,{children:"The ID of the comment being edited."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"newText"})}),(0,t.jsx)(n.td,{children:"The updated text of the comment."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"onDelete"})})}),(0,t.jsx)(n.td,{children:"Callback function triggered when a comment is deleted. It accepts:"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"commentId"})}),(0,t.jsx)(n.td,{children:"The ID of the comment being deleted."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"state-variables-1",children:"State Variables"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable Name"}),(0,t.jsx)(n.th,{children:"Purpose"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"menuOpen"})}),(0,t.jsx)(n.td,{children:"Controls the visibility of the dropdown menu."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isEditing"})}),(0,t.jsx)(n.td,{children:"Tracks whether the comment is in edit mode."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"editedText"})}),(0,t.jsx)(n.td,{children:"Stores the text being edited."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"showDeleteModal"})}),(0,t.jsx)(n.td,{children:"Controls the visibility of the delete confirmation modal."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"menuRef"})}),(0,t.jsx)(n.td,{children:"Reference to the dropdown menu for handling click-outside events."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"functions-and-methods-2",children:"Functions and Methods"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleMenuToggle"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Toggles the visibility of the dropdown menu."}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"menuOpen"})," state."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleClickOutside"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Closes the dropdown menu when clicking outside of it."}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"menuOpen"})," state."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"event"})," (Event): The DOM event object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleEditClick"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enables edit mode for the comment."}),"\n",(0,t.jsxs)(n.li,{children:["Sets ",(0,t.jsx)(n.code,{children:"isEditing"})," to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Closes the dropdown menu by setting ",(0,t.jsx)(n.code,{children:"menuOpen"})," to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleCancelClick"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cancels edit mode and resets the edited text to the original comment text."}),"\n",(0,t.jsxs)(n.li,{children:["Sets ",(0,t.jsx)(n.code,{children:"isEditing"})," to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Resets ",(0,t.jsx)(n.code,{children:"editedText"})," to the original ",(0,t.jsx)(n.code,{children:"comment.text"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleSaveClick"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Saves the edited comment text."}),"\n",(0,t.jsxs)(n.li,{children:["Calls the ",(0,t.jsx)(n.code,{children:"onEdit"})," callback with the comment ID and updated text."]}),"\n",(0,t.jsxs)(n.li,{children:["Exits edit mode by setting ",(0,t.jsx)(n.code,{children:"isEditing"})," to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"6",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleDeleteClick"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Triggers the deletion of the comment."}),"\n",(0,t.jsxs)(n.li,{children:["Calls the ",(0,t.jsx)(n.code,{children:"onDelete"})," callback with the comment ID."]}),"\n",(0,t.jsxs)(n.li,{children:["Closes the dropdown menu by setting ",(0,t.jsx)(n.code,{children:"menuOpen"})," to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Closes the delete confirmation modal by setting ",(0,t.jsx)(n.code,{children:"showDeleteModal"})," to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"comments-drawer",children:"Comments Drawer"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"CommentsDrawer.js"})," file manages and displays comments related to a specific applicant and job within a recruitment platform. It provides functionality to fetch, display, add, edit, and delete comments. The component integrates with a backend API to perform CRUD operations on comments."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\comments\\CommentsDrawer.js"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"props-3",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop Name"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"applicantId"})}),(0,t.jsx)(n.td,{children:"The ID of the applicant for whom comments are being managed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"jobId"})}),(0,t.jsx)(n.td,{children:"The ID of the job associated with the comments."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"content_type"})}),(0,t.jsx)(n.td,{children:"The type of content the comments are associated with."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object_id"})}),(0,t.jsx)(n.td,{children:"The ID of the object the comments are associated with."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"state-variables-2",children:"State Variables"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable Name"}),(0,t.jsx)(n.th,{children:"Purpose"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"comments"})}),(0,t.jsx)(n.td,{children:"Stores the list of comments fetched from the API."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"currentComment"})}),(0,t.jsx)(n.td,{children:"Stores the text of the comment being written by the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"open"})}),(0,t.jsx)(n.td,{children:"Controls the visibility of the comments drawer."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"functions-and-methods-3",children:"Functions and Methods"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"getComments()"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Fetches comments from the backend API based on the provided ",(0,t.jsx)(n.code,{children:"jobId"}),", ",(0,t.jsx)(n.code,{children:"applicantId"}),", ",(0,t.jsx)(n.code,{children:"content_type"}),", and ",(0,t.jsx)(n.code,{children:"object_id"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"comments"})," state with the fetched data."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Logs errors to the console if the API request fails."]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleEdit(commentId, editedText)"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Updates a specific comment's text in the backend and updates the local state."}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"comments"})," state with the edited comment and displays a success toast."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"commentId"})," (string/number): The ID of the comment to be edited."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"editedText"})," (string): The new text for the comment."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Logs errors to the console and displays a toast notification if the API request fails."]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handleDelete(commentId)"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Marks a comment as deleted in the backend and removes it from the local state."}),"\n",(0,t.jsxs)(n.li,{children:["Updates the ",(0,t.jsx)(n.code,{children:"comments"})," state by removing the deleted comment and displays a success toast."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"commentId"})," (string/number): The ID of the comment to be deleted."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Logs errors to the console and displays a toast notification if the API request fails."]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"handlePublishComment()"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Publishes a new comment to the backend and updates the local state."}),"\n",(0,t.jsxs)(n.li,{children:["Adds the new comment to the ",(0,t.jsx)(n.code,{children:"comments"})," state, clears the ",(0,t.jsx)(n.code,{children:"currentComment"})," input, and displays a success toast."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Logs errors to the console and displays a toast notification if the API request fails."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var d=s(6540);const t={},i=d.createContext(t);function r(e){const n=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),d.createElement(i.Provider,{value:n},e.children)}}}]);