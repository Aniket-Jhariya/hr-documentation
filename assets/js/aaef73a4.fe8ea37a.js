"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3541],{7680:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>x,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"frontend/Utilities/Switches","title":"Switches","description":"Switch2","source":"@site/docs/frontend/Utilities/Switches.md","sourceDirName":"frontend/Utilities","slug":"/frontend/Utilities/Switches","permalink":"/hr-documentation/frontend/Utilities/Switches","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":19,"frontMatter":{"sidebar_position":19},"sidebar":"tutorialSidebar","previous":{"title":"Static Templates","permalink":"/hr-documentation/frontend/Utilities/Static Templates"},"next":{"title":"Tables","permalink":"/hr-documentation/frontend/Utilities/Tables"}}');var d=s(4848),r=s(8453);const c={sidebar_position:19},i=void 0,l={},h=[{value:"Switch2",id:"switch2",level:2},{value:"Props",id:"props",level:3},{value:"Functions and Methods",id:"functions-and-methods",level:3},{value:"Styling",id:"styling",level:3},{value:"Preference Toggle",id:"preference-toggle",level:2},{value:"Props",id:"props-1",level:3},{value:"Functions and Methods",id:"functions-and-methods-1",level:3},{value:"Styling",id:"styling-1",level:3},{value:"Preference Switch",id:"preference-switch",level:2},{value:"Props",id:"props-2",level:3},{value:"Functions and Methods",id:"functions-and-methods-2",level:3}];function o(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"switch2",children:"Switch2"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"Switch2.js"}),' file renders a customizable toggle switch. The switch\'s state is controlled externally via props, making it a controlled component. It includes visual indicators for the "on" and "off" states, represented by a checkmark and an "x" icon, respectively.']}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"File Path:"})," ",(0,d.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\switches\\Switch2.js"})]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Prop Name"}),(0,d.jsx)(n.th,{children:"Purpose"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"checked"})}),(0,d.jsxs)(n.td,{children:['Determines whether the switch is in the "on" (',(0,d.jsx)(n.code,{children:"true"}),') or "off" (',(0,d.jsx)(n.code,{children:"false"}),") state."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"setChecked"})}),(0,d.jsxs)(n.td,{children:["A function to update the ",(0,d.jsx)(n.code,{children:"checked"})," state externally."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onChange"})}),(0,d.jsx)(n.td,{children:"A callback function triggered when the switch's state changes."})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"functions-and-methods",children:"Functions and Methods"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"Switch2"})}),"\n"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Renders a toggle switch with customizable visual indicators."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Return Value"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"A JSX element representing the toggle switch."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"styling",children:"Styling"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"CSS Statement"}),(0,d.jsx)(n.th,{children:"Purpose"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--switch-width"})}),(0,d.jsx)(n.td,{children:"Width of the switch container."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--switch-height"})}),(0,d.jsx)(n.td,{children:"Height of the switch container."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--switch-bg"})}),(0,d.jsx)(n.td,{children:'Background color of the switch in the "off" state.'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--switch-checked-bg"})}),(0,d.jsx)(n.td,{children:'Background color of the switch in the "on" state.'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--switch-offset"})}),(0,d.jsx)(n.td,{children:"Offset for positioning the circle within the switch."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--switch-transition"})}),(0,d.jsx)(n.td,{children:"Transition effect for the switch."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--circle-diameter"})}),(0,d.jsx)(n.td,{children:"Diameter of the circle (thumb) inside the switch."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--circle-bg"})}),(0,d.jsx)(n.td,{children:"Background color of the circle."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--circle-shadow"})}),(0,d.jsx)(n.td,{children:'Shadow effect for the circle in the "off" state.'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--circle-checked-shadow"})}),(0,d.jsx)(n.td,{children:'Shadow effect for the circle in the "on" state.'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--circle-transition"})}),(0,d.jsx)(n.td,{children:"Transition effect for the circle."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--icon-transition"})}),(0,d.jsx)(n.td,{children:"Transition effect for icons (checkmark and cross)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--icon-cross-color"})}),(0,d.jsx)(n.td,{children:"Color of the cross icon."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--icon-checkmark-color"})}),(0,d.jsx)(n.td,{children:"Color of the checkmark icon."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--icon-checkmark-size"})}),(0,d.jsx)(n.td,{children:"Size of the checkmark icon."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--effect-width"})}),(0,d.jsx)(n.td,{children:"Width of the effect line."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--effect-height"})}),(0,d.jsx)(n.td,{children:"Height of the effect line."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--effect-bg"})}),(0,d.jsx)(n.td,{children:"Background color of the effect line."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--effect-border-radius"})}),(0,d.jsx)(n.td,{children:"Border radius of the effect line."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--effect-transition"})}),(0,d.jsx)(n.td,{children:"Transition effect for the effect line."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"preference-toggle",children:"Preference Toggle"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"PreferenceToggle.js"}),' file is designed to provide a user interface for toggling between three preference states: "Mandatory," "Optional," and "Off." It is a reusable UI component that allows users to select one of these states, and it communicates the selected state back to the parent component via a callback function (',(0,d.jsx)(n.code,{children:"onChange"}),")."]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"File Path:"})," ",(0,d.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\switches\\PreferenceToggle.js"})]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"props-1",children:"Props"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Prop Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"value"})}),(0,d.jsxs)(n.td,{children:["Represents the currently selected preference state. It can be one of the following values: ",(0,d.jsx)(n.code,{children:"'mandatory'"}),", ",(0,d.jsx)(n.code,{children:"'optional'"})," or ",(0,d.jsx)(n.code,{children:"'off'"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onChange"})}),(0,d.jsx)(n.td,{children:"A callback function that is triggered when the user selects a new preference state. It takes the new value as an argument."})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"functions-and-methods-1",children:"Functions and Methods"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"handleSelection(newValue)"})}),"\n"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Handles the user's selection of a preference state and communicates it to the parent component."}),"\n",(0,d.jsxs)(n.li,{children:["Calls the ",(0,d.jsx)(n.code,{children:"onChange"})," callback function, which may trigger state updates or other logic in the parent component."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"newValue"})," (",(0,d.jsx)(n.code,{children:"string"}),"): The new preference state selected by the user. It can be ",(0,d.jsx)(n.code,{children:"'mandatory'"}),", ",(0,d.jsx)(n.code,{children:"'optional'"}),", or ",(0,d.jsx)(n.code,{children:"'off'"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"styling-1",children:"Styling"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"CSS Statement"}),(0,d.jsx)(n.th,{children:"Purpose"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:".preference-toggle"})}),(0,d.jsx)(n.td,{children:"Styles the container for the toggle buttons."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"display: flex"}),": Arranges child elements in a row."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"border: 1px solid #ddd"}),": Adds a light gray border."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"border-radius: 20px"}),": Rounds the corners of the container."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"background-color: #f9f9f9"}),": Sets a light gray background."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"padding: 4px"}),": Adds internal spacing."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"width: fit-content"}),": Adjusts the width to fit its content."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"gap: 8px"}),": Adds spacing between child elements."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"z-index: 1"}),": Ensures the toggle has its own stacking context."]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:".toggle-button"})})}),(0,d.jsx)(n.td,{children:"Styles the individual toggle buttons."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"flex: 1"})}),(0,d.jsx)(n.td,{children:"Allows buttons to grow and fill available space."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"border: none"})}),(0,d.jsx)(n.td,{children:"Removes the default button border."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"padding: 2px 16px"})}),(0,d.jsx)(n.td,{children:"Adds padding for better clickability."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"background: transparent"})}),(0,d.jsx)(n.td,{children:"Sets a transparent background."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"color: #333"})}),(0,d.jsx)(n.td,{children:"Sets the text color to dark gray."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"font-size: 14px"})}),(0,d.jsx)(n.td,{children:"Sets the font size."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"cursor: pointer"})}),(0,d.jsx)(n.td,{children:"Changes the cursor to a pointer on hover."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"border-radius: 20px"})}),(0,d.jsx)(n.td,{children:"Rounds the corners of the buttons."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"transition: all 0.3s ease"})}),(0,d.jsx)(n.td,{children:"Adds smooth transitions for hover effects."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"z-index: 1"})}),(0,d.jsx)(n.td,{children:"Ensures buttons do not overlap dropdown elements."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:".toggle-button.selected"})})}),(0,d.jsx)(n.td,{children:"Styles the selected toggle button."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"background-color: #7474f3"})}),(0,d.jsx)(n.td,{children:"Sets a purple background."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"color: white"})}),(0,d.jsx)(n.td,{children:"Changes the text color to white."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:".toggle-button:hover"})})}),(0,d.jsx)(n.td,{children:"Styles the hover state of toggle buttons."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"background-color: #e0e0f8"})}),(0,d.jsx)(n.td,{children:"Adds a light purple background on hover."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:".toggle-button.selected:hover"})})}),(0,d.jsx)(n.td,{children:"Styles the hover state of the selected toggle button."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"background-color: #6161e0"})}),(0,d.jsx)(n.td,{children:"Darkens the purple background slightly on hover."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:".select-container"})})}),(0,d.jsx)(n.td,{children:"Styles the container for dropdown elements."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"position: relative"})}),(0,d.jsx)(n.td,{children:"Positions the dropdown relative to its container."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"z-index: 0"})}),(0,d.jsx)(n.td,{children:"Ensures the dropdown is layered correctly."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:".select-container .react-select__control"})})}),(0,d.jsx)(n.td,{children:"Styles the control element of the dropdown."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"z-index: 0"})}),(0,d.jsx)(n.td,{children:"Ensures the dropdown does not appear above toggle buttons."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"preference-switch",children:"Preference Switch"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"PreferenceSwitch.js"})," file renders a customizable toggle switch for toggling user preferences or settings within the application. It accepts a ",(0,d.jsx)(n.code,{children:"checked"})," state and a ",(0,d.jsx)(n.code,{children:"setChecked"})," function as props, allowing it to be controlled by a parent component."]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"File Path:"})," ",(0,d.jsx)(n.code,{children:"\\hr-frontend\\src\\utils\\switches\\PreferenceSwitch.js"})]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"props-2",children:"Props"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Prop Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"checked"})}),(0,d.jsx)(n.td,{children:"Represents the current state of the switch (on/off)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"setChecked"})}),(0,d.jsxs)(n.td,{children:["A callback function triggered when the switch is toggled. It updates the ",(0,d.jsx)(n.code,{children:"checked"})," state in the parent component."]})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"functions-and-methods-2",children:"Functions and Methods"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"PreferenceSwitch"})}),"\n"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:'Renders a toggle switch with a custom design, including a checkmark icon for the "on" state and an "x" icon for the "off" state.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var t=s(6540);const d={},r=t.createContext(d);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);