"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6138],{7351:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"backend/candidates/endpoints","title":"Endpoints","description":"filter/","source":"@site/docs/backend/candidates/endpoints.md","sourceDirName":"backend/candidates","slug":"/backend/candidates/endpoints","permalink":"/hr-documentation/docs/backend/candidates/endpoints","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Candidates","permalink":"/hr-documentation/docs/category/candidates"},"next":{"title":"Models","permalink":"/hr-documentation/docs/backend/candidates/models"}}');var d=s(4848),l=s(8453);const r={sidebar_position:1},t="Endpoints",a={},c=[{value:"<code>filter/</code>",id:"filter",level:3},{value:"<code>list/</code>",id:"list",level:3},{value:"<code>stages/</code>",id:"stages",level:3},{value:"<code>list-with-stages/</code>",id:"list-with-stages",level:3},{value:"<code>list-with-stages/</code>",id:"list-with-stages-1",level:3},{value:"<code>candidate-names-list/</code>",id:"candidate-names-list",level:3},{value:"<code>candidates-for-job/&lt;int:job_id&gt;/</code>",id:"candidates-for-jobintjob_id",level:3},{value:"<code>download-resume/&lt;str:pk&gt;/</code>",id:"download-resumestrpk",level:3},{value:"<code>check-email/&lt;int:job_id&gt;/&lt;str:email&gt;/</code>",id:"check-emailintjob_idstremail",level:3},{value:"<code>resume-screening-completed-candidates/&lt;int:job_id&gt;/</code>",id:"resume-screening-completed-candidatesintjob_id",level:3},{value:"ViewSet",id:"viewset",level:2},{value:"<code>CandidateViewSet</code>",id:"candidateviewset",level:3},{value:"Methods",id:"methods",level:3},{value:"<code>validate_job_access(self, job_id, user)</code>",id:"validate_job_accessself-job_id-user",level:4},{value:"<code>get_serializer_context(self)</code>",id:"get_serializer_contextself",level:4},{value:"<code>get_serializer_class(self)</code>",id:"get_serializer_classself",level:4},{value:"<code>get_queryset(self)</code>",id:"get_querysetself",level:4},{value:"<code>create(self, request, *args, **kwargs)</code>",id:"createself-request-args-kwargs",level:4},{value:"<code>perform_update(self, serializer)</code>",id:"perform_updateself-serializer",level:4},{value:"<code>perform_destroy(self, instance)</code>",id:"perform_destroyself-instance",level:4}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"endpoints",children:"Endpoints"})}),"\n",(0,d.jsx)(n.h3,{id:"filter",children:(0,d.jsx)(n.code,{children:"filter/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," CandidateFilterView"]}),"\n",(0,d.jsx)(n.li,{children:"Filters and retrieves a list of candidates created by requesting user and associated users in the organisation. Filters resumes based on job_id context."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"POST"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    "user":{\n        ... \n        "user_id":123,\n        "org":{\n            ...\n            "org_id":1234\n        }           \n    }\n}\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'[\n    ...\n    {\n        "job_id":1234,\n        "name":"John Doe",\n        ...candidate details\n    }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"list",children:(0,d.jsx)(n.code,{children:"list/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," CandidateListView"]}),"\n",(0,d.jsx)(n.li,{children:"Filters and retrieves a list of candidates under the same job they applied to and on resume basis, ordered on the basis of the time of creation."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"POST"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    "user":{\n        ... \n        "user_id":123      \n    }\n}\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'[\n    ...\n    {\n        "job_id":1234,\n        "name":"John Doe",\n        ...candidate details\n    }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"stages",children:(0,d.jsx)(n.code,{children:"stages/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," CandidateStageProgressView"]}),"\n",(0,d.jsx)(n.li,{children:"Retrieves a the existing the stages of evaluation in the candidate records."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"GET"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    ...\n   "job_id":123,\n   "candidate_id":1234\n}\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:' {\n        "candidate_id": 1234,\n        "stages": {\n            "resume": {\n                "exists": true,\n                "key" : "resume-screening",\n                "stage_name" : "Resume Screening",\n                "service_id": 1,\n                "details": {\n                    ..resume details\n                }\n            },\n            "assessment": {\n                "exists": true,\n                "key" : "assessment",\n                "stage_name" : "Assessments",\n                "service_id": 23,\n                "details": {\n                    ...test log details\n                }\n            },\n            "video": {\n                "exists": true,\n                "key" : "automated-video-interview",\n                "stage_name" : "Automated Video Interview",\n                "service_id": 13,\n                "details":{\n                    ...personality screening video details\n                }\n            }\n            \n        }\n    }\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"list-with-stages",children:(0,d.jsx)(n.code,{children:"list-with-stages/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," CandidateListWithStagesByJobProgressView"]}),"\n",(0,d.jsx)(n.li,{children:"Filters and retrieves a list of candidates under the same job_id and optionally on the stage_name, for only authenticated user."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"POST"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    ...\n    "job_id": 1234,\n    "stage_name":"assessment"\n}\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'[\n    ...list of candidates\n    {\n        "job_id":1234,\n        "name":"John Doe",\n        ...candidate details\n    }\n]\n'})}),"\n",(0,d.jsx)(n.admonition,{type:"note",children:(0,d.jsx)(n.p,{children:"Responds with an empty list if no matching candidate found."})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"list-with-stages-1",children:(0,d.jsx)(n.code,{children:"list-with-stages/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," CandidateListWithStagesByJobProgressView"]}),"\n",(0,d.jsx)(n.li,{children:"Filters and retrieves a list of candidates under the same job_id and optionally on the stage_name, for only authenticated user."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"list"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    ...\n    "job_id": 1234,\n    "stage_name":"assessment"\n}\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'[\n    ...\n    {\n            "id": 123,\n            "name": "John Doe",\n            "email" : "johndoe@example.com",\n            "location" : "India",\n            "skills" : [...list of skills],\n            "created_at" : "2024-11-25T14:30:00Z",\n            "updated_at" : "2024-12-25T14:30:00Z",\n            "current_stage" : "Automated Video Interview", \n            "stages": {\n                "resume": {\n                    "exists": true,\n                    "key": "resume-screening",\n                    "stage_name": "Resume Screening",\n                    "service_id": 1,\n                    "details": ...resume details,\n                },\n                "assessment": {\n                    "exists": true,\n                    "key": "assessment",\n                    "stage_name": "Assessments",\n                    "service_id": 13,\n                    "details": ...test log details,\n                },\n                "video": {\n                    "exists": true,\n                    "key": "automated-video-intervie",\n                    "stage_name": "Automated Video Interview",\n                    "service_id": 23,\n                    "details": ...personality screening video details,\n                },\n            },\n        }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"candidate-names-list",children:(0,d.jsx)(n.code,{children:"candidate-names-list/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.strong,{children:"View:"})}),"\n",(0,d.jsx)(n.li,{children:"Retrieves a list of the candidates filtered by a user with admin or editor access."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"list"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    ...\n    "name":"John Doe",\n    "jobId":1234,\n    "shortlisted":true\n}\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'[\n    ...list of candidates\n    {\n        "name": "John Doe",\n        "id": 123,\n        ...candidate details\n    }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"candidates-for-jobintjob_id",children:(0,d.jsx)(n.code,{children:"candidates-for-job/<int:job_id>/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," CandidatesForJobView"]}),"\n",(0,d.jsx)(n.li,{children:"Filters and retrieves a list of candidates by job_id for authenticated users in the order of latest updated."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"list"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    ...\n    "job_id": 1234\n}\n\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:"[\n    ...list of job objects\n]\n"})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"download-resumestrpk",children:(0,d.jsx)(n.code,{children:"download-resume/<str:pk>/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," DownloadPDF"]}),"\n",(0,d.jsx)(n.li,{children:"Retrieves and downloads the resume from the candidate's user id for authenticated users."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["GET\n",(0,d.jsx)(n.strong,{children:"Response"})]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    "file": ...resume downloaded\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"check-emailintjob_idstremail",children:(0,d.jsx)(n.code,{children:"check-email/<int:job_id>/<str:email>/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," check_email_existence"]}),"\n",(0,d.jsx)(n.li,{children:"Checks if a candidate with the given email has applied to the specified job and their resume for that job."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["GET\n",(0,d.jsx)(n.strong,{children:"Response"})]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    "exists": true,\n    "id": 123,\n    "applied_job": 1234,\n    "resume": 12345,\n    "retries": 2\n}\n'})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Response Code"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"200"}),(0,d.jsxs)(n.td,{children:["SUCCESS: Candidate and resume retrieved/Candidate or resume not found",(0,d.jsx)(n.code,{children:"(exists=false)"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"400"}),(0,d.jsx)(n.td,{children:"FAIL: Invalid email/"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"404"}),(0,d.jsx)(n.td,{children:"FAIL: Job not found/Candidate with the email not found"})]})]})]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"resume-screening-completed-candidatesintjob_id",children:(0,d.jsx)(n.code,{children:"resume-screening-completed-candidates/<int:job_id>/"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"View:"})," ResumeScreeningCompletedCandidates"]}),"\n",(0,d.jsx)(n.li,{children:"Filters and retrieves a list of candidates based on the specified job, interview step service being 'resume Screening', and are completed."}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Payload"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"list"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    "job_id": 1234\n}\n\n'})}),"\n",(0,d.jsx)(n.strong,{children:"Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:"[\n    ...list of candidates\n]\n"})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"viewset",children:"ViewSet"}),"\n",(0,d.jsx)(n.h3,{id:"candidateviewset",children:(0,d.jsx)(n.code,{children:"CandidateViewSet"})}),"\n",(0,d.jsx)(n.p,{children:"Handles CRUD operations with custom logic for job access validation, dynamic serializer selection, and asynchronous file processing."}),"\n",(0,d.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h4,{id:"validate_job_accessself-job_id-user",children:(0,d.jsx)(n.code,{children:"validate_job_access(self, job_id, user)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Validates user access to a job."}),"\n",(0,d.jsx)(n.li,{children:"Checks user role and organization."}),"\n",(0,d.jsxs)(n.li,{children:["Raises ",(0,d.jsx)(n.code,{children:"PermissionDenied"})," if access is invalid."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"get_serializer_contextself",children:(0,d.jsx)(n.code,{children:"get_serializer_context(self)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),": Adds ",(0,d.jsx)(n.code,{children:"request"})," and ",(0,d.jsx)(n.code,{children:"job_id"})," to serializer context."]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"get_serializer_classself",children:(0,d.jsx)(n.code,{children:"get_serializer_class(self)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),": Selects serializer based on action."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Returns"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"CandidateSerializer"})," for ",(0,d.jsx)(n.code,{children:"retrieve"}),"/",(0,d.jsx)(n.code,{children:"list"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"BasicCandidateListSerializer"})," otherwise."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"get_querysetself",children:(0,d.jsx)(n.code,{children:"get_queryset(self)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),": Filters candidates based on user role and job access."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Returns"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Admins: All candidates in their organization."}),"\n",(0,d.jsx)(n.li,{children:"Editors/Participants: Candidates for owned or shared jobs."}),"\n",(0,d.jsxs)(n.li,{children:["Unauthenticated users: Empty queryset for ",(0,d.jsx)(n.code,{children:"list"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"createself-request-args-kwargs",children:(0,d.jsx)(n.code,{children:"create(self, request, *args, **kwargs)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Creates a new candidate."}),"\n",(0,d.jsx)(n.li,{children:"Processes resumes, profile pictures, and videos."}),"\n",(0,d.jsx)(n.li,{children:"Triggers Celery tasks for file uploads and resume parsing."}),"\n",(0,d.jsxs)(n.li,{children:["Creates ",(0,d.jsx)(n.code,{children:"JobUniversalStatus"})," and ",(0,d.jsx)(n.code,{children:"CandidateStageEvent"}),"."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Returns"}),":\n|Response Code|Description|\n|---|---|\n|201|SUCCESS: Candidate created|\n|400|FAIL: Invalid format|\n|500|FAIL: Server error|"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"perform_updateself-serializer",children:(0,d.jsx)(n.code,{children:"perform_update(self, serializer)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Updates an existing candidate."}),"\n",(0,d.jsxs)(n.li,{children:["Updates fields (e.g., ",(0,d.jsx)(n.code,{children:"name"}),", ",(0,d.jsx)(n.code,{children:"email"}),", ",(0,d.jsx)(n.code,{children:"linkedin"}),")."]}),"\n",(0,d.jsx)(n.li,{children:"Handles new resumes, profile pictures, and videos."}),"\n",(0,d.jsx)(n.li,{children:"Updates stage events."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"perform_destroyself-instance",children:(0,d.jsx)(n.code,{children:"perform_destroy(self, instance)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Deletes a candidate."}),"\n",(0,d.jsx)(n.li,{children:"Deletes associated resume and files from AWS S3."}),"\n",(0,d.jsxs)(n.li,{children:["Calls parent ",(0,d.jsx)(n.code,{children:"perform_destroy"})," to delete the candidate."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(6540);const d={},l=i.createContext(d);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);