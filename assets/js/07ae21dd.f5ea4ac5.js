"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6209],{7541:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"backend/resume parser/models","title":"Models","description":"ResumeScreeningPreference","source":"@site/docs/backend/resume parser/models.md","sourceDirName":"backend/resume parser","slug":"/backend/resume parser/models","permalink":"/hr-documentation/backend/resume parser/models","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Endpoints","permalink":"/hr-documentation/backend/resume parser/endpoints"},"next":{"title":"Tasks","permalink":"/hr-documentation/backend/resume parser/tasks"}}');var r=s(4848),l=s(8453);const o={sidebar_position:2},d="Models",c={},t=[{value:"<strong>ResumeScreeningPreference</strong>",id:"resumescreeningpreference",level:2},{value:"Fields:",id:"fields",level:3},{value:"<strong>ResumeScore</strong>",id:"resumescore",level:2},{value:"Fields:",id:"fields-1",level:3},{value:"<strong>Resume</strong>",id:"resume",level:2},{value:"Fields:",id:"fields-2",level:3},{value:"Methods:",id:"methods",level:3},{value:"<strong>OpenAICost</strong>",id:"openaicost",level:2},{value:"Fields:",id:"fields-3",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"models",children:"Models"})}),"\n",(0,r.jsx)(n.h2,{id:"resumescreeningpreference",children:(0,r.jsx)(n.strong,{children:"ResumeScreeningPreference"})}),"\n",(0,r.jsx)(n.p,{children:"Stores preferences for resume screening and application forms."}),"\n",(0,r.jsx)(n.h3,{id:"fields",children:"Fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"job"})})," (ForeignKey): The job associated with the preferences."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"currency"})})," (CharField): Currency for salary fields (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"max_retries"})})," (PositiveIntegerField): Maximum number of retries allowed (default: 1)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"max_applicants"})})," (PositiveIntegerField): Maximum number of applicants allowed (default: 100)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"max_resume_size"})})," (PositiveIntegerField): Maximum allowed resume size in MB (default: 10)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"currency"})})," (JSONField): Currency details (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"location_to_exclude"})})," (JSONField): Locations to exclude from screening (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_github"})})," (CharField): Preference for including GitHub link (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_linkedin"})})," (CharField): Preference for including LinkedIn link (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_personal_website"})})," (CharField): Preference for including personal website (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_profile_pic"})})," (CharField): Preference for including profile picture (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_intro_video"})})," (CharField): Preference for including introduction video (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_notice_period"})})," (CharField): Preference for including notice period (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_current_ctc"})})," (CharField): Preference for including current CTC (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_expected_ctc"})})," (CharField): Preference for including expected CTC (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_relevant_experience"})})," (CharField): Preference for including relevant experience (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"last_increment"})})," (CharField): Preference for including last increment details (choices: mandatory, optional, off; default: off)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"include_questions"})})," (BooleanField): Include custom questions in the application form (default: False)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"service"})})," (ForeignKey): Associated service (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"question_set"})})," (ForeignKey): Associated question set (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"questions"})})," (ManyToManyField): Custom questions for the application form (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"random_questions"})})," (BooleanField): Enable random questions (default: False)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"random_questions_count"})})," (PositiveIntegerField): Number of random questions to include (default: 0)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"resumescore",children:(0,r.jsx)(n.strong,{children:"ResumeScore"})}),"\n",(0,r.jsx)(n.p,{children:"Stores scores for resume evaluation."}),"\n",(0,r.jsx)(n.h3,{id:"fields-1",children:"Fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"job"})})," (ForeignKey): The job associated with the resume score (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"user"})})," (ForeignKey): The user who evaluated the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"score_weight"})})," (ForeignKey): Weightage used for scoring (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"ai_score"})})," (BooleanField): Indicates if the score is generated by AI (default: False)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"skills_score"})})," (DecimalField): Score for skills section (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"work_exp_score"})})," (DecimalField): Score for work experience section (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"projects_score"})})," (DecimalField): Score for projects section (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"education_score"})})," (DecimalField): Score for education section (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"certifications_score"})})," (DecimalField): Score for certifications section (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"overall_score"})})," (DecimalField): Overall resume score (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"feedback"})})," (CharField): Feedback on the resume (optional)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"resume",children:(0,r.jsx)(n.strong,{children:"Resume"})}),"\n",(0,r.jsx)(n.p,{children:"Stores resume details and associated metadata."}),"\n",(0,r.jsx)(n.h3,{id:"fields-2",children:"Fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"job"})})," (ForeignKey): The job associated with the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"resume_score"})})," (ForeignKey): The resume score (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"score_weight"})})," (ForeignKey): Weightage used for scoring (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"preference"})})," (ForeignKey): Resume screening preferences (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"name"})})," (CharField): Name of the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"resume_json"})})," (JSONField): Resume data in JSON format (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"input_tokens"})})," (IntegerField): Number of input tokens used for processing (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"output_tokens"})})," (IntegerField): Number of output tokens generated (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"total_tokens"})})," (IntegerField): Total tokens used (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"cost"})})," (DecimalField): Cost of processing the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"phone_numbers"})})," (CharField): Phone numbers extracted from the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"personal_website"})})," (CharField): Personal website URL (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"websites"})})," (JSONField): List of websites extracted from the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"emails"})})," (CharField): Email addresses extracted from the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"date_of_birth"})})," (CharField): Date of birth extracted from the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"addresses"})})," (JSONField): Addresses extracted from the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"summary"})})," (TextField): Summary of the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"ai_summary"})})," (TextField): AI-generated summary of the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"education"})})," (JSONField): Education details (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"work_experience"})})," (JSONField): Work experience details (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"duration_per_work"})})," (JSONField): Duration of each work experience (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"total_duration"})})," (IntegerField): Total work experience duration (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"skills"})})," (JSONField): Skills listed in the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"skills_matched"})})," (JSONField): Skills matched with job requirements (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"skill_match_count"})})," (IntegerField): Number of matched skills (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"certifications"})})," (JSONField): Certifications listed in the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"projects"})})," (JSONField): Projects listed in the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"overall_score"})})," (DecimalField): Overall score of the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"resume_file"})})," (FileField): Uploaded resume file (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"introduction_video"})})," (FileField): Uploaded introduction video (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"upload_count"})})," (IntegerField): Number of times the resume was uploaded (default: 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"task_duration_seconds"})})," (IntegerField): Time taken to process the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"completed"})})," (BooleanField): Indicates if resume processing is completed (default: False)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"task_message"})})," (CharField): Status message for resume processing (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"retries"})})," (PositiveIntegerField): Number of retries for processing (default: 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"created_at"})})," (DateTimeField): Timestamp when the resume was created (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"updated_at"})})," (DateTimeField): Timestamp when the resume was last updated (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"relevant_experience_in_months"})})," (IntegerField): Relevant experience in months (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"expected_ctc"})})," (IntegerField): Expected CTC (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"status_text"})}),' (CharField): Status of the resume (default: "Under Review").']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"approved_at"})})," (DateTimeField): Timestamp when the resume was approved (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"is_approved"})})," (BooleanField): Indicates if the resume is approved (default: False)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"approved_by"})})," (ForeignKey): User who approved the resume (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"updated_by"})})," (ForeignKey): User who last updated the resume status (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"users_shared_with"})})," (ManyToManyField): Users with whom the resume is shared (optional)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"methods",children:"Methods:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"__str__"})}),": Returns the resume ID as a string."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"openaicost",children:(0,r.jsx)(n.strong,{children:"OpenAICost"})}),"\n",(0,r.jsx)(n.p,{children:"Stores costs associated with OpenAI API usage."}),"\n",(0,r.jsx)(n.h3,{id:"fields-3",children:"Fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"task_name"})})," (CharField): Name of the task (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"task_type"})})," (CharField): Type of the task (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"resume"})})," (ForeignKey): The resume associated with the cost (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"job"})})," (ForeignKey): The job associated with the cost (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"object_name"})})," (CharField): Name of the object being processed (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"prompt_tokens"})})," (IntegerField): Number of prompt tokens used (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"completion_tokens"})})," (IntegerField): Number of completion tokens used (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"total_tokens"})})," (IntegerField): Total tokens used (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"cost"})})," (DecimalField): Cost of the task (optional)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var i=s(6540);const r={},l=i.createContext(r);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);