"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3354],{5336:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>h,contentTitle:()=>t,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"backend/workflow/models","title":"Models","description":"WorkFlow","source":"@site/docs/backend/workflow/models.md","sourceDirName":"backend/workflow","slug":"/backend/workflow/models","permalink":"/hr-documentation/backend/workflow/models","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Endpoints","permalink":"/hr-documentation/backend/workflow/endpoints"},"next":{"title":"Tasks","permalink":"/hr-documentation/backend/workflow/tasks"}}');var l=i(4848),n=i(8453);const r={sidebar_position:2},t="Models",h={},o=[{value:"WorkFlow",id:"workflow",level:2},{value:"Fields:",id:"fields",level:3},{value:"Methods:",id:"methods",level:3},{value:"StageRules",id:"stagerules",level:2},{value:"Fields:",id:"fields-1",level:3},{value:"Methods:",id:"methods-1",level:3},{value:"WorkFlowStages",id:"workflowstages",level:2},{value:"Fields:",id:"fields-2",level:3},{value:"Methods:",id:"methods-2",level:3},{value:"Alert",id:"alert",level:2},{value:"Fields:",id:"fields-3",level:3},{value:"Methods:",id:"methods-3",level:3},{value:"CandidateStage",id:"candidatestage",level:2},{value:"Fields:",id:"fields-4",level:3},{value:"Methods:",id:"methods-4",level:3},{value:"FieldRules",id:"fieldrules",level:2},{value:"Fields:",id:"fields-5",level:3},{value:"Methods:",id:"methods-5",level:3}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"models",children:"Models"})}),"\n",(0,l.jsx)(s.h2,{id:"workflow",children:"WorkFlow"}),"\n",(0,l.jsx)(s.p,{children:"Stores information about different workflows used in job processing."}),"\n",(0,l.jsx)(s.h3,{id:"fields",children:"Fields:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"name"})," (CharField): The name of the workflow."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"description"})," (TextField): A brief description of the workflow."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"created_by"})," (ForeignKey): The user who created the workflow."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"created_at"})," (DateTimeField): Timestamp when the workflow was created."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"updated_by"})," (ForeignKey): The user who last updated the workflow."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"updated_at"})," (DateTimeField): Timestamp when the workflow was last updated."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"users_shared_with"})," (ManyToManyField): Users with whom the workflow is shared."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"notify_on_completion"})," (BooleanField): Indicates whether notifications should be sent upon completion."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"enabled"})," (BooleanField): Whether the workflow is active."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"methods",children:"Methods:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"__str__"}),": Returns a string representation of the workflow."]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"stagerules",children:"StageRules"}),"\n",(0,l.jsx)(s.p,{children:"Defines rules associated with different workflow stages."}),"\n",(0,l.jsx)(s.h3,{id:"fields-1",children:"Fields:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"rule"})," (JSONField): JSON representation of the rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"created_by"})," (ForeignKey): The user who created the rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"created_at"})," (DateTimeField): Timestamp when the rule was created."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"updated_by"})," (ForeignKey): The user who last updated the rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"updated_at"})," (DateTimeField): Timestamp when the rule was last updated."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"key"})," (CharField): A unique key to identify the rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"service"})," (ForeignKey): The service associated with this rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"alert_on_success"})," (BooleanField): Whether alerts should be triggered when the rule passes."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"methods-1",children:"Methods:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"__str__"}),": Returns a string representation of the rule."]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"workflowstages",children:"WorkFlowStages"}),"\n",(0,l.jsx)(s.p,{children:"Defines the stages in a workflow."}),"\n",(0,l.jsx)(s.h3,{id:"fields-2",children:"Fields:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"workflow"})," (ForeignKey): The workflow associated with the stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"stage_name"})," (CharField): The name of the stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"rule"})," (ForeignKey): The rule applied at this stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"stage_configuration"})," (JSONField): Configuration data for the stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"order"})," (IntegerField): The order of the stage in the workflow."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"methods-2",children:"Methods:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"__str__"}),": Returns a string representation of the workflow stage."]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"alert",children:"Alert"}),"\n",(0,l.jsx)(s.p,{children:"Defines alerts triggered by rules in workflow stages."}),"\n",(0,l.jsx)(s.h3,{id:"fields-3",children:"Fields:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"name"})," (CharField): The name of the alert."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"description"})," (TextField): A brief description of the alert."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"user"})," (ForeignKey): The user associated with the alert."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"stage"})," (ForeignKey): The workflow stage where the alert applies."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"rule"})," (ForeignKey): The rule triggering the alert."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"condition"})," (JSONField): The condition that triggers the alert."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"enabled"})," (BooleanField): Whether the alert is active."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"methods-3",children:"Methods:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"__str__"}),": Returns a string representation of the alert."]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"candidatestage",children:"CandidateStage"}),"\n",(0,l.jsx)(s.p,{children:"Tracks a candidate's progress through workflow stages."}),"\n",(0,l.jsx)(s.h3,{id:"fields-4",children:"Fields:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"workflow_stage"})," (ForeignKey): The stage the candidate is currently in."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"job"})," (ForeignKey): The job associated with the candidate."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"candidate"})," (ForeignKey): The candidate assigned to the stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"stage_name"})," (CharField): Name of the current stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"started_at"})," (DateTimeField): Timestamp when the stage started."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"completed_at"})," (DateTimeField): Timestamp when the stage was completed."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"completed"})," (BooleanField): Whether the stage is completed."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"is_approved"})," (BooleanField): Whether the candidate was approved."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"rejected"})," (BooleanField): Whether the candidate was rejected."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"rule"})," (JSONField): The rule applied at this stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"reason"})," (TextField): The reason for approval or rejection."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"status_text"})," (CharField): Status of the candidate in the stage."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"approved_at"})," (DateTimeField): Timestamp when approved."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"rejected_at"})," (DateTimeField): Timestamp when rejected."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"is_passed"})," (BooleanField): Whether the candidate passed the stage."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"methods-4",children:"Methods:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"__str__"}),": Returns a string representation of the candidate stage."]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"fieldrules",children:"FieldRules"}),"\n",(0,l.jsx)(s.p,{children:"Defines validation rules for various fields in the system."}),"\n",(0,l.jsx)(s.h3,{id:"fields-5",children:"Fields:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"name"})," (CharField): The name of the field rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"service"})," (ForeignKey): The service associated with the rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"key"})," (CharField): A unique key for identifying the rule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"datatype"})," (CharField): The type of data expected (e.g., string, number)."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"data_source"})," (CharField): The source of data for validation."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"methods-5",children:"Methods:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"__str__"}),": Returns a string representation of the field rule."]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>t});var d=i(6540);const l={},n=d.createContext(l);function r(e){const s=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),d.createElement(n.Provider,{value:s},e.children)}}}]);