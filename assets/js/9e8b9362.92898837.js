"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[903],{8082:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"frontend/Utilities/React Quill","title":"React Quill","description":"Toolbar Options","source":"@site/docs/frontend/Utilities/React Quill.md","sourceDirName":"frontend/Utilities","slug":"/frontend/Utilities/React Quill","permalink":"/hr-documentation/frontend/Utilities/React Quill","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15},"sidebar":"tutorialSidebar","previous":{"title":"Progress Bar","permalink":"/hr-documentation/frontend/Utilities/Progress Bar"},"next":{"title":"Sidebar","permalink":"/hr-documentation/frontend/Utilities/Sidebar"}}');var n=r(4848),i=r(8453);const o={sidebar_position:15},d=void 0,l={},c=[{value:"Toolbar Options",id:"toolbar-options",level:2},{value:"Props",id:"props",level:3},{value:"Styling",id:"styling",level:3}];function h(e){const t={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"toolbar-options",children:"Toolbar Options"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"ToolbarOptions.js"})," file defines the configuration for the toolbar options in a React-Quill rich text editor. It exports a structured array of toolbar formats and options, which are used to customize the editor's toolbar. This file plays a crucial role in enabling or disabling specific formatting features in the editor, such as font styles, colors, alignment, and more."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"File Path:"})," ",(0,n.jsx)(t.code,{children:"\\hr-frontend\\src\\utils\\react-quill\\ToolbarOptions.js"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Dependencies"}),":","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"React-Quill"}),": The exported ",(0,n.jsx)(t.code,{children:"formats"})," array is passed to the ",(0,n.jsx)(t.code,{children:"modules.toolbar"})," prop of the React-Quill component."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Prop Name"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"colors"})})}),(0,n.jsx)(t.td,{children:"Defines a list of color options available for text and background color formatting in the editor."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"red"}),", ",(0,n.jsx)(t.code,{children:"green"}),", ",(0,n.jsx)(t.code,{children:"blue"}),", ",(0,n.jsx)(t.code,{children:"orange"}),", ",(0,n.jsx)(t.code,{children:"violet"})]}),(0,n.jsx)(t.td,{children:"Predefined color options."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"formats"})})}),(0,n.jsx)(t.td,{children:"A nested array of objects that define the toolbar options and their configurations for the React-Quill editor."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"className"})}),(0,n.jsx)(t.td,{children:"A string representing the Quill class name for the toolbar option."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"options"})}),(0,n.jsx)(t.td,{children:"An array of available options for the toolbar feature."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"value"})}),(0,n.jsx)(t.td,{children:"A specific value for the toolbar option."})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"styling",children:"Styling"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"CSS Statement"}),(0,n.jsx)(t.th,{children:"Purpose"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:".ql-toolbar"})})}),(0,n.jsx)(t.td,{children:"Styles the toolbar of the React Quill editor."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"border-radius"})}),(0,n.jsxs)(t.td,{children:["Rounds the top corners of the toolbar (",(0,n.jsx)(t.code,{children:"6px 6px 0px  0px"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"border"})}),(0,n.jsxs)(t.td,{children:["Applies a solid border with a light gray color (",(0,n.jsx)(t.code,{children:"rgb(230, 230, 230)"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:".ql-container"})})}),(0,n.jsx)(t.td,{children:"Styles the container of the React Quill editor where the content is displayed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"font-size"})}),(0,n.jsxs)(t.td,{children:["Sets the font size to ",(0,n.jsx)(t.code,{children:"1rem"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"font-family"})}),(0,n.jsxs)(t.td,{children:["Uses ",(0,n.jsx)(t.code,{children:'"Roboto", sans-serif'})," and ",(0,n.jsx)(t.code,{children:"'Poppins', sans-serif"})," as fallback fonts."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"border-radius"})}),(0,n.jsxs)(t.td,{children:["Rounds the bottom corners of the container (",(0,n.jsx)(t.code,{children:"0px 0px 6px 6px"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"border"})}),(0,n.jsxs)(t.td,{children:["Applies a solid border with a light gray color (",(0,n.jsx)(t.code,{children:"rgb(230, 230, 230)"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"border-top"})}),(0,n.jsx)(t.td,{children:"Removes the top border to seamlessly connect with the toolbar."})]})]})]}),"\n",(0,n.jsx)(t.hr,{})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>d});var s=r(6540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);