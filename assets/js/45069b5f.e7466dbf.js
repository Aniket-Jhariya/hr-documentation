"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7628],{8996:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"backend/notifications/models","title":"Models","description":"NotificationLogs","source":"@site/docs/backend/notifications/models.md","sourceDirName":"backend/notifications","slug":"/backend/notifications/models","permalink":"/hr-documentation/backend/notifications/models","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Endpoints","permalink":"/hr-documentation/backend/notifications/endpoints"},"next":{"title":"Tasks","permalink":"/hr-documentation/backend/notifications/tasks"}}');var t=n(4848),o=n(8453);const l={sidebar_position:2},c="Models",d={},r=[{value:"NotificationLogs",id:"notificationlogs",level:2},{value:"Fields:",id:"fields",level:3},{value:"EmailNotificationLogs",id:"emailnotificationlogs",level:2},{value:"Fields:",id:"fields-1",level:3},{value:"NotificationType",id:"notificationtype",level:2},{value:"Fields:",id:"fields-2",level:3},{value:"NotificationSubscriptions",id:"notificationsubscriptions",level:2},{value:"Fields:",id:"fields-3",level:3}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"models",children:"Models"})}),"\n",(0,t.jsx)(i.h2,{id:"notificationlogs",children:"NotificationLogs"}),"\n",(0,t.jsx)(i.p,{children:"Stores logs of user notifications."}),"\n",(0,t.jsx)(i.h3,{id:"fields",children:"Fields:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"user"})," (ForeignKey): The user receiving the notification."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"type"})," (CharField): The type of notification."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"message"})," (TextField): The notification message."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"timestamp"})," (DateTimeField): Timestamp when the notification was created."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"is_read"})," (BooleanField): Indicates if the notification has been read (default: ",(0,t.jsx)(i.code,{children:"False"}),")."]}),"\n"]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"emailnotificationlogs",children:"EmailNotificationLogs"}),"\n",(0,t.jsx)(i.p,{children:"Stores logs of email notifications sent to users."}),"\n",(0,t.jsx)(i.h3,{id:"fields-1",children:"Fields:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"user"})," (ForeignKey): The user receiving the email notification (optional)."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"type"})," (CharField): The type of email notification."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"to_email"})," (CharField): The recipient email address."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"subject"})," (TextField): The email subject."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"timestamp"})," (DateTimeField): Timestamp when the email was sent."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"sent"})," (BooleanField): Indicates if the email was successfully sent (default: ",(0,t.jsx)(i.code,{children:"False"}),")."]}),"\n"]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"notificationtype",children:"NotificationType"}),"\n",(0,t.jsx)(i.p,{children:"Defines different types of notifications and their templates."}),"\n",(0,t.jsx)(i.h3,{id:"fields-2",children:"Fields:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"type_name"})," (CharField): The name of the notification type (e.g., ",(0,t.jsx)(i.code,{children:"new_applicant"}),")."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"template"})," (CharField): The HTML template for the notification."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"subject"})," (CharField): The subject line of the notification (e.g., ",(0,t.jsx)(i.code,{children:"CandidHR | New Applicant Summary"}),")."]}),"\n"]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"notificationsubscriptions",children:"NotificationSubscriptions"}),"\n",(0,t.jsx)(i.p,{children:"Stores user notification subscription preferences."}),"\n",(0,t.jsx)(i.h3,{id:"fields-3",children:"Fields:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"user"})," (ForeignKey): The user subscribing to notifications."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"type"})," (CharField): The type of notification the user is subscribed to (e.g., ",(0,t.jsx)(i.code,{children:"new_applicant"}),")."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var s=n(6540);const t={},o=s.createContext(t);function l(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);